import json
import logging
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
)
from config import BOT_TOKEN
from handlers.commands import start_command, support_command, handle_support_callback
from handlers.questions import handle_user_message, handle_inline_callback
from handlers.settings import get_settings_handlers
from handlers.admin import get_admin_handlers
from handlers.feedback import handle_feedback_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = ApplicationBuilder().token(BOT_TOKEN).build()

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
with open("questions.json", encoding="utf-8") as f:
    app.bot_data["questions"] = json.load(f)

# –ö–æ–º–∞–Ω–¥—ã
app.add_handler(CommandHandler("start", start_command))
app.add_handler(CommandHandler("support", support_command))

# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
app.add_handler(CallbackQueryHandler(handle_support_callback, pattern="^(show_support_link|back_to_main)$"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
for handler in get_settings_handlers():
    app.add_handler(handler)

# –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
for handler in get_admin_handlers():
    app.add_handler(handler)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –≤ –±–ª–æ–∫–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
app.add_handler(CallbackQueryHandler(handle_inline_callback))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
async def message_dispatcher(update, context):
    if context.user_data.get("feedback_mode"):
        await handle_feedback_message(update, context)
    else:
        await handle_user_message(update, context)

app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_dispatcher))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

import json
import logging
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
)
from config import BOT_TOKEN
from handlers.commands import start_command, support_command, handle_support_callback
from handlers.questions import handle_user_message
from handlers.settings import get_settings_handlers
from handlers.admin import get_admin_handlers
from handlers.feedback import handle_feedback_message

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = ApplicationBuilder().token(BOT_TOKEN).build()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –≤ –ø–∞–º—è—Ç—å (–¥–ª—è —Ä–µ–∂–∏–º–∞ –≤–æ–ø—Ä–æ—Å–æ–≤)
with open("questions.json", encoding="utf-8") as f:
    app.bot_data["questions"] = json.load(f)

# –ö–æ–º–∞–Ω–¥—ã
app.add_handler(CommandHandler("start", start_command))
app.add_handler(CommandHandler("support", support_command))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
for handler in get_settings_handlers():
    app.add_handler(handler)

# –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
for handler in get_admin_handlers():
    app.add_handler(handler)

# –ò–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
app.add_handler(CallbackQueryHandler(handle_support_callback, pattern="^(show_support_link|back_to_main)$"))

# –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –≤–æ–ø—Ä–æ—Å/–ø–µ—Ä–µ–≤–æ–¥/–æ—Ç–≤–µ—Ç/–æ—Ç–∑—ã–≤
async def message_dispatcher(update, context):
    if context.user_data.get("feedback_mode"):
        await handle_feedback_message(update, context)
    else:
        await handle_user_message(update, context)

app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_dispatcher))

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()
